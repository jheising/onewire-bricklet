(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[      5411,        143]
NotebookOptionsPosition[      4899,        120]
NotebookOutlinePosition[      5237,        135]
CellTagsIndexPosition[      5194,        132]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<NETLink`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"LoadNETAssembly", "[", 
  RowBox[{"\"\<Tinkerforge\>\"", ",", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<../../..\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.600175052949191*^9, 3.600175066601799*^9}, 
   3.600175102142559*^9, {3.6001753172765293`*^9, 3.600175317946432*^9}, {
   3.600500538026902*^9, 3.600500561851948*^9}, {3.600506097634747*^9, 
   3.600506099012146*^9}, 3.600506136278721*^9, {3.60060805238198*^9, 
   3.600608117803465*^9}, 3.600685373189396*^9, {3.6007864396674213`*^9, 
   3.6007864432843943`*^9}, {3.600787680353766*^9, 3.6007876806816196`*^9}, 
   3.6007882647509737`*^9}],

Cell[BoxData[{
 RowBox[{"host", "=", "\"\<localhost\>\""}], "\[IndentingNewLine]", 
 RowBox[{"port", "=", "4223"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uid", "=", "\"\<XYZ\>\""}], 
  RowBox[{"(*", " ", 
   RowBox[{"Change", " ", "to", " ", "your", " ", "UID"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Create", " ", "IPConnection", " ", "and", " ", "device", " ", "object"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ipcon", "=", 
  RowBox[{"NETNew", "[", "\"\<Tinkerforge.IPConnection\>\"", "]"}]}], "\n", 
 RowBox[{"t", "=", 
  RowBox[{"NETNew", "[", 
   RowBox[{
   "\"\<Tinkerforge.BrickletTemperature\>\"", ",", "uid", ",", "ipcon"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ipcon", "@", 
  RowBox[{"Connect", "[", 
   RowBox[{"host", ",", "port"}], "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzWkow3EcBvAlueONK2qOSBrLXdZy5AUv5kga5Zjm+pczRyS8QMnIMddm
JlNa3smRI1ukVoQcOcPkFf+NhLlCfs/vxbdPPfU8Xz9pdWaJFYfDCSAHDyQv
UcojNjFMGhEN+1IvJTDwYU8KN/8Gy2CKcbYWXmcIGqE/L14OrW3OJ2CkOVIN
57huLePEnpk6aunAaQf1jaWWr2jMU0Tn1eVHaFQ6WeBkBfsBxfK8H3h/xlDD
x7T+GuRcVQCs8rTmQUuomA+ZFDYaGlRf1JvJVjms0ScPwWwPZZIO/5PO02Cy
el8MI67ycuCoTCbcIqYOHsTBKosvZwd7KxIXqOwrcodLv/ae0LZScMEck162
6yXciV9nYcX8CdXgsDZcTmSf9CrIM9vNQOZWoYUJX025aqJwMaEY9gd51cBW
Jp0qaBA1wO2cQqqj4v0QTvUaTmGI/qLdRLxfYzqh1Oa2GwpDdDLYvHCmg+3c
rg1oGJuLeSM+32lioVXoiwhyD3UZsO1OmwtF8/wCOJ2/Wwb/8kca4auP0dtC
VPBN1PrP4IKsKFPid/cw9R8E+1N9
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Get", " ", "current", " ", "temperature", " ", 
    RowBox[{"(", 
     RowBox[{"unit", " ", "is", " ", 
      RowBox[{"\[Degree]C", "/", "100"}]}], ")"}], " ", "and", " ", "plot", 
    " ", "it"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"samples", "=", 
    RowBox[{"{", "}"}]}], "\[IndentingNewLine]", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"samples", ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"18", ",", "28"}], "}"}]}], " ", "}"}]}], ",", 
      "\[IndentingNewLine]", "                                 ", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<samples\>\"", ",", "\"\<Temperature [\[Degree]C]\>\""}], 
        "}"}]}]}], "]"}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"RunScheduledTask", "[", 
    RowBox[{
     RowBox[{"AppendTo", "[", 
      RowBox[{"samples", ",", 
       RowBox[{"Quantity", "[", 
        RowBox[{
         RowBox[{"t", "@", 
          RowBox[{"GetTemperature", "[", "]"}]}], ",", 
         "\"\<\[Degree]C/100\>\""}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "100"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6007863727456427`*^9, 3.6007863804737463`*^9}, {
  3.60078654185425*^9, 3.6007866013432093`*^9}, {3.600786872455331*^9, 
  3.600786875092909*^9}, {3.600787671426694*^9, 3.600787687039487*^9}, {
  3.600791850085209*^9, 3.6007918515961246`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Clean", " ", "up"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"RemoveScheduledTask", "[", 
    RowBox[{"ScheduledTasks", "[", "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ipcon", "@", 
    RowBox[{"Disconnect", "[", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"ReleaseNETObject", "[", "t", "]"}], "\[IndentingNewLine]", 
   RowBox[{"ReleaseNETObject", "[", "ipcon", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.600787649088681*^9, 3.600787650304427*^9}}]
},
WindowSize->{1591, 901},
WindowMargins->{{Automatic, 74}, {Automatic, 24}},
FrontEndVersion->"9.0 for Linux x86 (64-bit) (November 20, 2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 732, 13, 55, "Input"],
Cell[1135, 28, 1484, 33, 187, "Input"],
Cell[2622, 63, 1737, 42, 143, "Input"],
Cell[4362, 107, 533, 11, 121, "Input"]
}
]
*)

